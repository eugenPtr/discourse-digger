datasource db {
  // could be postgresql or mysql
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

model Dao {
  id         String   @id @default(cuid())
  name       String   @unique
  discourseUsername String
  discourseApiKey String  //Assumption: The API key grants only read access.
  paginationIndex Int @default(1)
  apiBaseUrl String
  posts      Post[]
  topics     Topic[]
  proposals  Proposal[]
}

model Topic {
  id         String   @id @default(cuid())
  discourseId Int
  createdAt  DateTime
  title     String
  body    String
  views     Int
  daoId      String
  dao        Dao      @relation(fields: [daoId], references: [id])
  @@unique([daoId, discourseId])
}

model Post {
  id         String   @id @default(cuid())
  discourseId Int
  topicDiscourseId Int
  author     String
  createdAt  DateTime
  body       String
  views      Int
  daoId      String
  dao        Dao      @relation(fields: [daoId], references: [id])
  @@unique([daoId, discourseId])
}

model Proposal {
  id  String @id @default(cuid())
  title String
  body String
  discourseId Int //This is the discourseId of the Topic
  daoId String
  dao Dao @relation(fields: [daoId], references: [id])
}
